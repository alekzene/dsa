CREATE N ARRAYS WITH RANDOM SIZES AND VALUES
1. get no. of arrays to generate
2. create n arrays with random lengths using step 1 output
4. generate random numbers
3. add random variables (+/-) to each array using step 4 output

FIXME: CLARIFY WITH SIR
FIND SERIES OF COMMON NUMBERS AMONG ARRAYS WITH THE SHORTEST RANGE
4. find array shortest range between common numbers

FIXME: ask sir to clarify "range". does he mean a.) difference of min/max values, b.) size of array, c.) both, or d.) something else
FIXME: if choice a is true, clarify how it should be printed. does he mean a.) just print the difference, b.) print the min/max numbers that define the range, c.) print all numbers (min, max, and all numbers in between) that define the range, d.) both, or e.) something else
FIXED: d.) something else

5. print the shortest range found (ex: "The shortest range is 4-6: [4, 5,6]")
FIXME: clarify with sir. in the given example, why can't it just be 1, 2, 3, 4

STORE NUMBERS DEFINING RANGE IN A NEW ARRAY
6. make a new array
7. populate the new array w/ the numbers defining the range

CHECK IF NUMBERS IN THE NEW ARRAY CONTAIN A PRIME NUMBER
8. FIXME: insert specific logic here

    IF TRUE: TODO: USE MERGE SORT (?)
    MERGE ALL RANDOMLY GENERATED ARRAYS
    9.
    SORT NUMBERS IN THE MERGED ARRAY
    10.
    FIND ALL POSSIBLE SUB-ARRAYS WHOSE VALUES EQUAL 0
    FIXME: clarify definition of "sub-array"
    11.

    IF FALSE:
    FIND FIRST AND LAST OCCURRENCE OF NUMBERS IN THE RANGE LIST BASED ON RANDOMLY GENERATED ARRAYS
    12. for every element in the range list
            for every random list generated
                **default value of firstOccurrence is null
                **default value of lastOccurrence is firstOccurrence
                for every value in the random list generated
                    13. check if value in random list == element in range list
                        if true:
                        14. get index of value in random list

                            if firstOccurrence == null
                            15. firstOccurrence = index value from step 14

                            else:
                            16. lastOccurrence = index value from step 14
                            17. continue
                17. print "array" + array number
                18. if firstOccurrence == null, print element + "cannot be found"
                19. else:
                        print "first occurrence of " + element " is index " + firstOccurrence
                        print "last occurrence of " + element " is index " + index

    /* FIXME: IS THERE ANOTHER WAY TO MAKE ADDING PARAMETERS
        OPTIONAL WITHOUT HAVING TO OVERLOAD THE METHOD? */